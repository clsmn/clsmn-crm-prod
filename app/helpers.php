<?php

/**
 * Global helpers file with misc functions.
 */
if (! function_exists('app_name')) {
    /**
     * Helper to grab the application name.
     *
     * @return mixed
     */
    function app_name()
    {
        return config('app.name');
    }
}

if (! function_exists('access')) {
    /**
     * Access (lol) the Access:: facade as a simple function.
     */
    function access()
    {
        return app('access');
    }
}

if (! function_exists('history')) {
    /**
     * Access the history facade anywhere.
     */
    function history()
    {
        return app('history');
    }
}

if (! function_exists('gravatar')) {
    /**
     * Access the gravatar helper.
     */
    function gravatar()
    {
        return app('gravatar');
    }
}

if (! function_exists('includeRouteFiles')) {

    /**
     * Loops through a folder and requires all PHP files
     * Searches sub-directories as well.
     *
     * @param $folder
     */
    function includeRouteFiles($folder)
    {
        $directory = $folder;
        $handle = opendir($directory);
        $directory_list = [$directory];

        while (false !== ($filename = readdir($handle))) {
            if ($filename != '.' && $filename != '..' && is_dir($directory.$filename)) {
                array_push($directory_list, $directory.$filename.'/');
            }
        }

        foreach ($directory_list as $directory) {
            foreach (glob($directory.'*.php') as $filename) {
                require $filename;
            }
        }
    }
}

if (! function_exists('getRtlCss')) {

    /**
     * The path being passed is generated by Laravel Mix manifest file
     * The webpack plugin takes the css filenames and appends rtl before the .css extension
     * So we take the original and place that in and send back the path.
     *
     * @param $path
     *
     * @return string
     */
    function getRtlCss($path)
    {
        $path = explode('/', $path);
        $filename = end($path);
        array_pop($path);
        $filename = rtrim($filename, '.css');

        return implode('/', $path).'/'.$filename.'.rtl.css';
    }
}

if (! function_exists('prepareUserLocation')) {
    function prepareUserLocation($user)
    {
        $location = '';
        if(isset($user->locality) && $user->locality != '')
        {
            $location .= $user->locality.', ';
        }
        if(isset($user->city) && $user->city != '')
        {
            $location .= $user->city.', ';
        }
        if(isset($user->state) && $user->state != '')
        {
            $location .= $user->state.', ';
        }
        if(isset($user->country) && $user->country != '')
        {
            $location .= $user->country;
        }
        return $location;
    }
}

if (! function_exists('getClassGradeName')) {
    function getClassGradeName($id)
    {
        $name = '';
        if($id == '1')
        {
            $name = 'Play Group';
        }
        if($id == '2')
        {
            $name = 'Nursery';
        }
        if($id == '3')
        {
            $name = 'Lower/Junior KG';
        }
        if($id == '4')
        {
            $name = 'Upper/Senior KG';
        }
        if($id == '18')
        {
            $name = 'Home Taught';
        }
        return $name;
    }
}

if (! function_exists('decryptData')) {
    function decryptData($data)
    {
        $cipher = new phpseclib\Crypt\AES(); // could use AES::MODE_CBC
        $cipher->setKeyLength(256);
        $cipher->setKey(env('APP_AES_KEY', ''));
        $cipher->setIV(env('APP_AES_IV', ''));
        return $cipher->decrypt(base64_decode($data));
    }
}

if (! function_exists('encryptData')) {
    function encryptData($data)
    {
        if(is_array($data))
        {
            $data = json_encode($data);
        }
        $cipher = new phpseclib\Crypt\AES(); // could use AES::MODE_CBC
        $cipher->setKeyLength(256);
        $cipher->setKey(env('APP_AES_KEY', ''));
        $cipher->setIV(env('APP_AES_IV', ''));
        //$cipher->disablePadding();
        return base64_encode($cipher->encrypt($data));
    }
}

if (! function_exists('leadStatusBtnClass')) {
    function leadStatusBtnClass($status)
    {
        $class = '';
        if($status == 'sale')
        {
            $class = 'btn-success';
        }else if($status == 'hot')
        {
            $class = 'btn-primary';
        }else if($status == 'mild')
        {
            $class = 'btn-info';
        }else if($status == 'cold')
        {
            $class = 'btn-warning';
        }else if($status == 'dead')
        {
            $class = 'btn-danger';
        }
        return $class;
    }
}

if (! function_exists('duration')) {
    function duration($duration, $exotel=false)
    {
        if($exotel) {
            $hours = floor($duration / 3600);
            $mins = floor($duration / 60 % 60);
            $secs = floor($duration % 60);
        }else{
            $seconds = floor($duration/1000);
    
            $hours = floor($seconds / 3600);
            $mins = floor($seconds / 60 % 60);
            $secs = floor($seconds % 60);
        }

        return sprintf('%02d:%02d:%02d', $hours, $mins, $secs);
    }
}

if (! function_exists('leadPhone')) {
    function leadPhone($phone)
    {
        $phone = str_replace('+91', '91', $phone);
        $phone = str_replace('+', '', $phone);
        
        return $phone;
    }
}

if (! function_exists('leadStatus')) {
    function leadStatus($status)
    {
        $status = str_replace('_', ' ', $status);
        
        return strtoupper($status);
    }
}